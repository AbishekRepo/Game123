generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  name          String
  email         String        @unique
  walletBalance Float         @default(0)
  role          UserRole      @default(USER)
  createdAt     DateTime      @default(now())
  lastLogin     DateTime      @updatedAt
  password      String?
  accounts      Account[]
  sessions      Session[]
  bets          Bet[]
  transactions  Transaction[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Bet {
  id         String    @id @default(cuid())
  userId     String
  gameId     String
  betAmount  Float
  multiplier Float
  status     BetStatus @default(PENDING)
  result     Float?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  gameTitle  String?
  user       User      @relation(fields: [userId], references: [id])

  @@map("bets")
}

model Transaction {
  id        String            @id @default(cuid())
  userId    String
  type      TransactionType
  amount    Float
  status    TransactionStatus @default(PENDING)
  metadata  Json?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  user      User              @relation(fields: [userId], references: [id])

  @@map("transactions")
}

enum UserRole {
  ADMIN
  DEVELOPER
  ANALYST
  USER
}

enum BetStatus {
  PENDING
  WON
  LOST
  CANCELLED
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
  BET_PLACED
  BET_WON
  BET_LOST
  BONUS
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}
